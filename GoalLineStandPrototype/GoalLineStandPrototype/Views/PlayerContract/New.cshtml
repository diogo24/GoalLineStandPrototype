@using GoalLineStandPrototype.Utils
@model GoalLineStandPrototype.Models.PlayerContractDetails

@{
    ViewBag.Title      = "New";
    Layout             = "~/Views/Shared/_GLSLayout.cshtml";
    var salaryYearsMax = 5;
}

<h2>New</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PlayerContractDetails</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            THIS CONTRACT is between @Html.DisplayFor(m => m.Player.PlayerName) (Player)
            <br />
            and @Html.DisplayFor(m => m.Player.Team) (Team)
        </div>

        @*@Html.LabelFor(m => m.Seasons) @Html.DisplayFor(m => m.Seasons)*@
        <br />

        <div class="form-group">
            will begin on the date of execution or March 1,
            <br />
            @Html.LabelFor(model => model.BeginYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BeginYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BeginYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            end on February 28 or 29,
            <br />
            @Html.LabelFor(model => model.TerminateYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TerminateYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TerminateYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Compensation:
            <br />
            <div class="col-md-10">
                @for (int i = 0; i < salaryYearsMax; i++)
                {
                    <div>
                        @Html.TextBox("SalarySeason.Salary", 0, new { type = "Numeric" }) for the @Html.TextBox("SalarySeason.Year", 0, new { type = "Numeric" }) season
                    </div>
                }
                
            </div>
        </div>

        @* Bonus *@

        <div class="form-group">            
            @Html.LabelFor(model => model.SigningBonus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SigningBonus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SigningBonus, "", new { @class = "text-danger" })
            </div>
        </div>

        @* Player Incentives *@
        <h3>Player Incentives</h3>
        <table class="table" id="Player_Incentives_Table">
            <thead>
                <tr>
                    <th>Incentive Name</th>
                    <th>Incentive Milestone</th>
                    <th>Incentive Bonus</th>
                    <th></th>
                </tr>
                <tr>
                    <th>@Html.DropDownList("PlayerIncentives.Code", IncentivesHelper.GetAllPlayerIncentives().AsEnumerable(), "--Select option--")</th>
                    <th>@Html.TextBox("PlayerIncentives.Milestone", 0, new { type = "Numeric" })</th>
                    <th>@Html.TextBox("PlayerIncentives.Bonus", 0, new { type = "Numeric" })</th>
                    <th><button id="Add_Player_Incentive" class="btn btn-success">Add Incentive</button></th>
                </tr>
            </thead>
            <tbody id="Player_Incentives_Table_Body">

            </tbody>
        </table>

        @* Team Incentives *@
        <h3>Team Incentives</h3>
        <table class="table" id="Team_Incentives_Table">
            <thead>
                <tr>
                    <th>Incentive Name</th>
                    <th>Incentive Milestone</th>
                    <th>Incentive Bonus</th>
                    <th></th>
                </tr>
                <tr>
                    <th>@Html.DropDownList("TeamIncentives.Code", IncentivesHelper.GetAllTeamIncentives().AsEnumerable(), "--Select option--")</th>
                    <th>@Html.TextBox("TeamIncentives.Milestone", 0, new { type = "Numeric" })</th>
                    <th>@Html.TextBox("TeamIncentives.Bonus", 0, new { type = "Numeric" })</th>
                    <th><button id="Add_Team_Incentive" class="btn btn-success">Add Incentive</button></th>
                </tr>
            </thead>
            <tbody id="Team_Incentives_Table_Body"></tbody>
        </table> 
        @* HONORS AND RECOGNIZED MEDIA *@


        @* Salary Cap Hit *@
        <div class="form-group">
            @Html.Label("SalaryCap", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="Salary_Cap">
                @Html.Display("SalaryCap", new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script type="text/javascript">
        $(function () {
            $('#Add_Player_Incentive').click(addPlayerIncentive);
            $('#Add_Team_Incentive').click(addTeamIncentive);
        });

        function addPlayerIncentive(e) {
            e.preventDefault();
            var playerIncentiveCode      = $('#PlayerIncentives_Code').val();
            var playerIncentiveMilestone = $('#PlayerIncentives_Milestone').val();
            var playerIncentiveBonus     = $('#PlayerIncentives_Bonus').val();

            var tr = $("<tr></tr>");
            tr.append("<td>" + playerIncentiveCode + "</td>");
            tr.append("<td>" + playerIncentiveMilestone + "</td>");
            tr.append("<td>" + playerIncentiveBonus + "</td>");
            var body = $('#Player_Incentives_Table_Body').append(tr);
        }

        function addTeamIncentive(e) {
            e.preventDefault();
            var teamIncentiveCode      = $('#TeamIncentives_Code').val();
            var teamIncentiveMilestone = $('#TeamIncentives_Milestone').val();
            var teamIncentiveBonus     = $('#TeamIncentives_Bonus').val();

            var tr = $("<tr></tr>");
            tr.append("<td>" + teamIncentiveCode + "</td>");
            tr.append("<td>" + teamIncentiveMilestone + "</td>");
            tr.append("<td>" + teamIncentiveBonus + "</td>");
            var body = $('#Team_Incentives_Table_Body').append(tr);
        }
    </script>
}